HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop
$ cd WEB_D\ Backend

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend (main)
$ cd Lecture_53

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53 (main)
$ cd learnGit/

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (main)
$ ls -a
./  ../  file.txt

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        ./

nothing added to commit but untracked files present (use "git add" to track)

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (main)
$ git init
Initialized empty Git repository in C:/Users/HP/Desktop/WEB_D Backend/Lecture_53/learnGit/.git/

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ ls -a
./  ../  .git/  file.txt

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git sta
git: 'sta' is not a git command. See 'git --help'.

The most similar commands are
        status
        stage
        stash

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git staus
git: 'staus' is not a git command. See 'git --help'.

The most similar command is
        status

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        file.txt

nothing added to commit but untracked files present (use "git add" to track)

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git add file.txt

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   file.txt


HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git commit -m " This is my first commit in file.txt"
[master (root-commit) 36499f4]  This is my first commit in file.txt
 1 file changed, 1 insertion(+)
 create mode 100644 file.txt

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ cat file2.txt
Hi this is my second file
HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        file2.txt

nothing added to commit but untracked files present (use "git add" to track)

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git init
Reinitialized existing Git repository in C:/Users/HP/Desktop/WEB_D Backend/Lecture_53/learnGit/.git/

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git add .

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   file2.txt


HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git commit -m "This is my second commit"
[master 896e8fa] This is my second commit
 1 file changed, 1 insertion(+)
 create mode 100644 file2.txt

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git branch
* master

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git branch new_feature

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git branch
* master
  new_feature

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git checkout new_feature
Switched to branch 'new_feature'

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (new_feature)
$ git branch
  master
* new_feature

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (new_feature)
$ git status
On branch new_feature
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        file3.txt

nothing added to commit but untracked files present (use "git add" to track)

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (new_feature)
$ git add .

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (new_feature)
$ git commit -m "This is my third commit for feature branch"
[new_feature f23fedc] This is my third commit for feature branch
 1 file changed, 1 insertion(+)
 create mode 100644 file3.txt

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (new_feature)
$ git checkout main
error: pathspec 'main' did not match any file(s) known to git

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (new_feature)
$ git checkout master
Switched to branch 'master'

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git merge new_feature
Updating 896e8fa..f23fedc
Fast-forward
 file3.txt | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 file3.txt

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git branch
* master
  new_feature

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git status
On branch master
nothing to commit, working tree clean

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ ls
file.txt  file2.txt  file3.txt

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git branch
* master

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        file4.txt

nothing added to commit but untracked files present (use "git add" to track)

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git add .

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   file4.txt


HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git commit -m "This is main branch file4.txt"
[master dcb64a7] This is main branch file4.txt
 1 file changed, 1 insertion(+)
 create mode 100644 file4.txt

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git branch
* master

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (master)
$ git checkout -b latest_feature
Switched to a new branch 'latest_feature'

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (latest_feature)
$ git branch
* latest_feature
  master

HP@LAPTOP-IDH8TFAT MINGW64 ~/Desktop/WEB_D Backend/Lecture_53/learnGit (latest_feature)
$ ls
file.txt  file2.txt  file3.txt  file4.txt

